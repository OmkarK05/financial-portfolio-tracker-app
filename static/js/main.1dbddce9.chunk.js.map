{"version":3,"sources":["Components/StockData.js","Components/StockTracking.js","Components/FetchApi.js","App.js","Firebase/FirebaseConfig.js","serviceWorker.js","index.js"],"names":["StockData","className","this","props","stockNames","map","item","index","key","onClick","clickEvent","symbol","name","Component","StockTracking","getData","a","firebase","database","ref","on","snapshot","exists","databaseData","val","data","trackingStockRemoveBtn","setState","tableData","removeTrackingStock","remove","then","console","log","catch","error","state","Object","entries","length","style","overflowX","noOfShares","buyPrice","currentPrice","toFixed","addstockButton","FetchApi","setPrice","id","set","stockValue","query","apiQuery","Axios","get","res","result","err","alert","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Modal","setAppElement","App","addToTrackStock","addStock","trackingStocks","push","stocks","filter","stock","removeBtn","removeStock","fAddStockButton","stockID","handleCLick","stockSymbol","stockName","isModalOpen","handleModal","keys","NoOfShares","buyDate","setDatabase","update","stockId","handleCloseModal","profitLoss","isOpen","size","float","position","right","type","placeholder","onChange","e","target","value","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1dbddce9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass StockData extends Component {\n  render() {\n    return (\n      <div className=\"AddStocksTitle\">\n        <h5 className=\"add\">Add stock to tracking</h5>\n        <ul>\n          {this.props.stockNames.map((item, index) => (\n            <li key={index}>\n              <button\n                className=\"StockButton\"\n                onClick={() => {\n                  this.props.clickEvent(item);\n                }}\n              >\n                {item.symbol}\n              </button>\n\n              <span>{item.name}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default StockData;\n","import React, { Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nclass StockTracking extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tableData: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = async () => {\n    await firebase\n      .database()\n      .ref(\"TrackingStocks/\")\n      .on(\"value\", (snapshot) => {\n        if (snapshot && snapshot.exists()) {\n          this.databaseData(snapshot.val());\n          // this.setState({ tableData: snapshot.val() });\n        }\n      });\n  };\n\n  databaseData = (data) => {\n    {\n      this.props.trackingStockRemoveBtn(data);\n    }\n    this.setState({ tableData: data });\n  };\n\n  removeTrackingStock = (key) => {\n    firebase\n      .database()\n      .ref(`/TrackingStocks/${key}`)\n      .remove()\n      .then(() => console.log(\"successfully Deleted\"))\n      .catch((error) => console.log(\"error\"));\n    console.log(this.state.tableData);\n    if (Object.entries(this.state.tableData).length === 1) {\n      this.setState({ tableData: 0 });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"head\">\n          <h2>Finance Porfolio Tracker</h2>\n        </div>\n        <div className=\"tableSection\">\n          <div className=\"MyStocks\">\n            <h4>\n              <strong>My Stocks</strong>\n            </h4>\n          </div>\n          <div style={{ overflowX: \"auto\" }}>\n            <table className=\"striped\">\n              <tr>\n                <th>Stock Symbol</th>\n                <th>Stock Name</th>\n                <th>No. of Shares</th>\n                <th>Buy Price</th>\n                <th>Current Price</th>\n                <th>\n                  Profit/<br></br>Loss\n                </th>\n                <th>Stop Tracking</th>\n              </tr>\n\n              {Object.entries(this.state.tableData).map(([key, data]) => (\n                <tr key={key}>\n                  <td>{data.symbol}</td>\n                  <td>{data.name}</td>\n                  <td>{data.noOfShares}</td>\n                  <td>{data.buyPrice}</td>\n                  <td>{data.currentPrice}</td>\n                  <td>\n                    {(\n                      (data.currentPrice - data.buyPrice) *\n                      data.noOfShares\n                    ).toFixed(2)}\n                  </td>\n                  <td>\n                    <button\n                      className=\"StopTrackingBtn waves-effect waves-light btn\"\n                      onClick={() => {\n                        this.removeTrackingStock(key);\n                        this.props.addstockButton(data);\n                      }}\n                    >\n                      Stop Tracking\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StockTracking;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nclass FetchApi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: this.props.apiQuery,\n      stockValue: {},\n    };\n  }\n\n  componentDidMount() {\n    // if (this.state.query !== \" \") {\n    Axios.get(\n      `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${this.state.query}&apikey=289IDFVBTBBRIPUN`\n    )\n      .then((res) => {\n        const data = res.data;\n        const result = data[\"Time Series (Daily)\"];\n        const entries = Object.entries(result)[0];\n        this.setState({ stockValue: entries[1][\"4. close\"] });\n        this.setPrice();\n        console.log(this.state.stockValue);\n      })\n      .catch((err) => alert(\"Failed fetching Api\"));\n    // }\n  }\n\n  setPrice = async () => {\n    firebase\n      .database()\n      .ref(\"TrackingStocks/\" + this.props.id)\n      .set({\n        currentPrice: this.state.stockValue,\n      });\n    console.log(this.state.stockValue);\n  };\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default FetchApi;\n","import React from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport StockData from \"./Components/StockData\";\nimport StockTracking from \"./Components/StockTracking\";\nimport Modal from \"react-modal\";\nimport FetchApi from \"./Components/FetchApi\";\nimport { firebaseConfig } from \"./Firebase/FirebaseConfig\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nfirebase.initializeApp(firebaseConfig);\nModal.setAppElement(\"#root\");\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trackingStocks: [],\n      stocks: [\n        { symbol: \"MSFT\", name: \"Microsoft Corporation\", id: 0 },\n        { symbol: \"DIS\", name: \"Walt Disney Co \", id: 1 },\n        { symbol: \"BA\", name: \"Boeing Co\", id: 2 },\n        { symbol: \"HD\", name: \"Home Depot Inc\", id: 3 },\n        { symbol: \"NKE\", name: \"NIKE INC\", id: 4 },\n        { symbol: \"MCD\", name: \"Mcdonald's Corp\", id: 5 },\n        { symbol: \"INTC\", name: \"Intel Corporation\", id: 6 },\n        { symbol: \"GS\", name: \"Goldman Sachs Group Inc\", id: 7 },\n        { symbol: \"JPM\", name: \"JPMorgan Chase & Co.\", id: 8 },\n        { symbol: \"AXP\", name: \"American Express Company\", id: 9 },\n        { symbol: \"IBM\", name: \"IBM Common Stock\", id: 10 },\n      ],\n      isModalOpen: false,\n\n      stockSymbol: \" \",\n      stockName: \" \",\n      NoOfShares: \" \",\n      buyPrice: \" \",\n      currentPrice: \"\",\n      profitLoss: \" \",\n      buyDate: {},\n      stockID: {},\n    };\n  }\n\n  addToTrackStock = (addStock) => {\n    console.log(addStock);\n    this.state.trackingStocks.push(addStock.id);\n    this.setState({\n      stocks: this.state.stocks.filter((stock) => stock.symbol !== addStock),\n    });\n  };\n\n  removeBtn = (data) => {\n    console.log(data);\n    Object.entries(data).map(([key, removeStock]) => {\n      this.setState({\n        stocks: this.state.stocks.filter(\n          (stock) => stock.symbol !== removeStock.symbol\n        ),\n      });\n    });\n  };\n\n  fAddStockButton = (data) => {\n    console.log(data);\n    if (data.buyPrice) {\n      this.state.stocks.push({\n        symbol: data.symbol,\n        name: data.name,\n        id: data.stockID,\n      });\n    }\n    this.setState({ stocks: this.state.stocks });\n  };\n\n  handleCLick = (item) => {\n    this.setState({ stockSymbol: item.symbol });\n    this.setState({ stockName: item.name });\n    this.setState({ stockID: item.id });\n    this.setState({ isModalOpen: !this.state.isModalOpen });\n  };\n\n  handleModal = () => {\n    if (\n      Object.keys(this.state.buyPrice).length === 0 ||\n      Object.keys(this.state.NoOfShares).length === 0 ||\n      Object.keys(this.state.buyDate).length === 0\n    ) {\n      alert(\"Please enter values\");\n    } else {\n      this.setState({ isModalOpen: !this.state.isModalOpen });\n      this.setDatabase();\n      this.addToTrackStock(this.state.stockSymbol);\n    }\n  };\n\n  setDatabase = async () => {\n    try {\n      firebase\n        .database()\n        .ref(\"TrackingStocks/\" + this.state.stockID)\n        .update({\n          symbol: this.state.stockSymbol,\n          name: this.state.stockName,\n          noOfShares: this.state.NoOfShares,\n          buyPrice: this.state.buyPrice,\n          stockId: this.state.stockID,\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  handleCloseModal = () => this.setState({ isModalOpen: false });\n\n  render() {\n    return (\n      <div>\n        <StockTracking\n          addstockButton={this.fAddStockButton}\n          trackingStockRemoveBtn={this.removeBtn}\n        ></StockTracking>\n\n        <StockData\n          stockNames={this.state.stocks}\n          clickEvent={this.handleCLick}\n        ></StockData>\n\n        <Modal\n          isOpen={this.state.isModalOpen}\n          // onRequestClose={() => this.handleCloseModal}\n        >\n          <FaTimesCircle\n            size={30}\n            style={{ float: \"right\" }}\n            onClick={this.handleCloseModal}\n          ></FaTimesCircle>\n          <div className=\"AddStockForm\">\n            <h2 className=\"formHead\">{`Add ${this.state.stockName} to my stocks`}</h2>\n\n            <section className=\"formContainer\">\n              <div className=\"formEle\">\n                <h5>Company Name</h5>\n                <span style={{ position: \"relative\", right: \"0px\" }}>\n                  {this.state.stockName}\n                </span>\n              </div>\n              <div className=\"formEle\">\n                <h5>No. of Shares</h5>\n                <input\n                  type=\"number\"\n                  id=\"noShares\"\n                  placeholder=\"No. of shares\"\n                  onChange={(e) => {\n                    this.setState({ NoOfShares: e.target.value });\n                  }}\n                />\n              </div>\n              <div className=\"formEle\">\n                <h5>Buy Price</h5>\n                <input\n                  type=\"number\"\n                  id=\"buyPrice\"\n                  placeholder=\"Buy Price\"\n                  onChange={(e) => {\n                    this.setState({ buyPrice: e.target.value });\n                  }}\n                />\n              </div>\n              <div className=\"formEle\">\n                <h5>Buy Date</h5>\n\n                <input\n                  type=\"date\"\n                  id=\"buyDate\"\n                  placeholder=\"YYYY-MM-DD\"\n                  onChange={(e) => {\n                    this.setState({ buyDate: e.target.value });\n                  }}\n                />\n              </div>\n              <div className=\" btn\">\n                <button className=\"AddButton\" onClick={this.handleModal}>\n                  Add\n                </button>\n                <FetchApi\n                  apiQuery={this.state.stockSymbol}\n                  id={this.state.stockID}\n                ></FetchApi>\n              </div>\n            </section>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyCqoPyKdSOhTCNlp1tzFxyD2RlrvNlTE9A\",\n  authDomain: \"finance-portfolio-tracke-4a485.firebaseapp.com\",\n  databaseURL: \"https://finance-portfolio-tracke-4a485.firebaseio.com\",\n  projectId: \"finance-portfolio-tracke-4a485\",\n  storageBucket: \"finance-portfolio-tracke-4a485.appspot.com\",\n  messagingSenderId: \"737224908325\",\n  appId: \"1:737224908325:web:41f3095fa6ba10812069cc\",\n  measurementId: \"G-S5W0TMZZET\",\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}